package,URI,label,comment,hasBlockingEffect,currentRisk,futureRisk
domain#000000,domain#000000,HostWithMultipleCellNIC,12345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#5G,domain#CSG-HostWithMultipleCellNIC,HostWithMultipleCellNIC,Means host _Gateway_ has more than one cellular network interface.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#5G,domain#CSG-NetworkEAP-SIM-Client,NetworkEAP.SIM.Client,"If subnet _LogicalSubnet_ uses a AAA service control access, supplicant device _Host_ can connect if it has a SIM card containing a key provisioned by the AAA system.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-AntiMalwareAtHost,AntiMalwareAtHost,"Anti-malware software is installed on device _Host_ and kept up to date by regular software patches, and so can detect and prevent the execution of malicious code.",domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Application,domain#CSG-AntiMalwareAtServiceHost,AntiMalwareAtServiceHost,"Anti-malware software is installed on device _SHost_ and kept up to date by regular software patches, and so can detect and prevent the execution of malicious code.",domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Application,domain#CSG-DataAccessControl,DataAccessControl,The host device _Host_ enforces an access control policy for a stored copy of _Data_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-DataBaseAccessControl,DataBaseAccessControl,The data service _Service_ enforces an access control policy for a stored copy of _Data_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-SpamFilteringAtMUA,SpamFilteringAtMUA,Spam filtering functionality is installed on the email user agent _MUA_ (a mail client or a webmail service).,domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Application,domain#CSG-StaticSystemData,StaticSystemData,Data _Data_ is static data inserted into the system on deployment and not altered subsequently by any process in the system. This control strategy is used to negate modelling error threats that detect cases where data is not created by any process.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-SuspendInfectedHost,SuspendInfectedHost,"Device _Host_ may be temporarily disabled by its manager _HostManager_ to prevent it being exploited should it become infected by malware. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Application,domain#CSG-SuspendInfectedHost-Implementation-Runtime,SuspendInfectedHost.Implementation,"Device _Host_ has been disabled by its manager _HostManager_ to prevent it being exploited after being infected by malware. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing the device. The Disabled Host control should be deselected only when the host has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-SuspendInfectedHost-Trigger,SuspendInfectedHost,"Device _Host_ may be temporarily disabled by its manager _HostManager_ to prevent it being exploited should it become infected by malware. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-SuspendInfectedProcess,SuspendInfectedProcess,"Process _Process_ may be temporarily disabled by the manager of its host _HostManager_ to prevent it being exploited should it become infected by malware. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Application,domain#CSG-SuspendInfectedProcess-Implementation-Runtime,SuspendInfectedProcess.Implementation,"Process _Process_ has been disabled by the manager of its host _HostManager_ to prevent it being exploited after being infected by malware. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing the device hosting _Process_. The Disabled Process control should be deselected only when the process has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-SuspendInfectedProcess-Trigger,SuspendInfectedProcess,"Process _Process_ may be temporarily disabled by the manager of its host _HostManager_ to prevent it being exploited should it become infected by malware. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Application,domain#CSG-UserWithoutEmail,UserWithoutEmail,The user _Human_ has no access to email from any device used by them while engaged in the system.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendCorruptDataFlow,AutoSuspendCorruptDataFlow,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ can be automatically disabled to prevent corrupt or malicious content (including malware) from disrupting the receipient _FlowsTo_. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendCorruptDataFlow-Implementation-Runtime,AutoSuspendCorruptDataFlow.Implementation,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ has been automatically disabled to prevent corrupt or malicious content (including malware) from disrupting the receipient _FlowsTo_. This strategy represents activation of a contingency plan at runtime, and can be enabled to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Activation at runtime requires _FlowsTo_ to be managed by a suitable adaptation framework. The Disabled Data Flow control should be deselected if and when the flow of data is enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendExcessiveClientAccess,AutoSuspendExcessiveClientAccess," Access to service _Service_ by client _Client_ may be automatically disabled to prevent the service forwarding excessive requests or becoming overloaded itself, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendExcessiveClientAccess-Implementation-Runtime,AutoSuspendExcessiveClientAccess.Implementation,"Access to service _Service_ by client _Client_ has been automatically disabled to prevent the service forwarding excessive requests or becoming overloaded itself. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Activation at runtime requires _Service_ to be managed by a suitable adaptation framework. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendSensitiveDataFlow,AutoSuspendSensitiveDataFlow,"The sending of data _Data_ from _FlowsFrom_ to _FlowsTo_ can be can be automatically disabled to prevent leaking of data. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendSensitiveDataFlow-Implementation-Runtime,AutoSuspendSensitiveDataFlow.Implementation.Runtime,"The sending of data _Data_ from _FlowsFrom_ to _FlowsTo_ has been automatically disabled to prevent leaking of data. This strategy represents activation of a contingency plan at runtime, and can be enabled to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Activation at runtime requires _FlowsFrom_ to be managed by a suitable adaptation framework. The Disabled Data Flow control should be deselected if and when the flow of data is enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendUnauthenticClientAccess,AutoSuspendUnauthenticClientAccess,"Access to service _Service_ by client _Client_ may be automatically disabled to prevent authenticated attacks by impersonated clients, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendUnauthenticClientAccess-Implementation-Runtime,AutoSuspendUnauthenticClientAccess.Implementation,"Access to service _Service_ by client _Client_ has been automatically disabled to prevent authenticated attacks by impersonated clients. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Activation at runtime requires _Service_ to be managed by a suitable adaptation framework. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendUntrustworthyClientAccess,AutoSuspendUntrustworthyClientAccess,"Access to service _Service_ by client _Client_ may be automatically disabled to prevent authenticated attacks by compromised clients, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#CloudManagement,domain#CSG-AutoSuspendUntrustworthyClientAccess-Implementation-Runtime,AutoSuspendUntrustworthyClientAccess.Implementation,"Access to service _Service_ by client _Client_ has been automatically disabled to prevent authenticated attacks by compromised clients. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Activation at runtime requires _Service_ to be managed by a suitable adaptation framework. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataAccessKey,DataAccessKey,Process _Process_ has a key for encrypting or decrypting data _Data_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowEncryption,DataFlowEncryption,The data _Data_ flowing between processes _FlowsFrom_ and _FlowsTo_ is encrypted by the two processes (i.e. not relying on transport level encryption).,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowEncryptionFromProcess,DataFlowEncryptionFromProcess,The data _Data_ sent by _Process_ to _FlowsTo_ is encrypted end-to-end (i.e. not relying on transport level encryption).,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowEncryptionToProcess,DataFlowEncryptionToProcess,The data _Data_ sent by _FlowsFrom_ to _Process_ is encrypted end-to-end (i.e. not relying on transport level encryption).,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowIntegrityProtection,DataFlowIntegrityProtection,Makes it possible to check that a copy of _Data_ flowing from _FlowsFrom_ to _FlowsTo_ has not been accidentially or deliberately altered by an intermediary or in transit.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowSharedKeyInbound,DataFlowSharedKeyInbound,"The data _Data_ flowing between processes _FlowsFrom_ and _FlowsTo_ is encrypted end-to-end (i.e. not relying on transport level encryption), and _FlowsTo_ has the key needed to decrypt the data on arrival.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataFlowSharedKeyOutbound,DataFlowSharedKeyOutbound,"The data _Data_ flowing between processes_FlowsTo_  and _FlowsTo_ is encrypted end-to-end (i.e. not relying on transport level encryption), and _FlowsFrom_ has the key needed to encrypt the data for transmission.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataServiceKey,DataServiceKey,Process _Service_ has a key for encrypting or decrypting data _Data_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataStorageEncryption,DataStorageEncryption,The copy of _Data_ stored on _Host_ is encrypted.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataStorageIntegrityProtection,DataStorageIntegrityProtection,Makes it possible to check if the stored copy of _Data_ on _Host_ has been altered by an unauthorised process.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DataStorageReplication,DataStorageReplication,The stored copy of _Data_ is protected by creating multiple copies across a cluster of instances of _Host_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DisableDataFlow,DisableDataFlow,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ has been disabled. This control strategy represents a permanent restriction introduced by design, or a temporary situation created following activation of a contingency plan.  In the latter case, this control strategy should not itself be selected, because its controls will be fulfilled by the contingency plan activation strategy.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-DistinctProcessAccessKeys,DistinctProcessAccessKeys,"Processes _Service_ and _Client_ share data _Data_ in encrypted form, but use keys to encrypt or decrypt between transfer and processing, implying a need for the keys used with _Data_ to also be shared.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-EncryptedDataProcessing,EncryptedDataProcessing,"Process _Process_ uses homomorphic encryption technology to perform calculations on data _Data_ in an encrypted domain, allowing it to process the data without first decrypting.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-EncryptedDataProcessingAtService,EncryptedDataProcessingAtService,"Process _Service_ uses homomorphic encryption technology to perform calculations on data _Data_ in an encrypted domain, allowing it to process the data without first decrypting.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-EncryptedQueryProcessing,EncryptedQueryProcessing,"Process _Service_ uses homomorphic encryption technology to process queries on data _Data_ in an encrypted domain, allowing it to serve the data without decrypting it.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-ParquetDataEncryption,ParquetDataEncryption,"Database service _Service_ stores data using Parquet format, enabling it to run queries by selective decryption of the stored data _Data_, whether this is done locally or at a remote data store. This imposes far less overheads, as the amount of data that must be decrypted is small.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-SharedKeyManagement,SharedKeyManagement,Processes _Client_ and _Service_ have secure access to a shared key used to encrypt and decrypt data _Data_ for transfer via file or network.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-SuspendCorruptDataFlow,SuspendCorruptDataFlow,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ can be temporarily blocked by the manager _ProcessManager_ of recipient process _FlowsTo_ to prevent corrupt or malicious content (including malware) from disrupting the process. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#DataLifecycle,domain#CSG-SuspendCorruptDataFlow-Implementation-Runtime,SuspendCorruptDataFlow.Implementation,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ has been disabled by the manager _ProcessManager_ of _FlowsTo_ to prevent corrupt or malicious content (including malware) disrupting the process. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _ProcessManager_ who is responsible for managing process _FlowsTo_. The Disabled Data Flow control should be deselected only when the flow of data is enabled again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#DataLifecycle,domain#CSG-SuspendSensitiveDataFlow,SuspendSensitiveDataFlow,"The flow of data _Data_ from _FlowsFrom_ to _FlowsTo_ can be temporarily blocked by the manager _ProcessManager_ of sending process _FlowsFrom_ to prevent leaking of data. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#DataLifecycle,domain#CSG-SuspendSensitiveDataFlow-Implementation-Runtime,SuspendSensitiveDataFlow.Implementation.Runtime,"The sending of data _Data_ from _FlowsFrom_ to _FlowsTo_ has been disabled by the manager _ProcessManager_ of _FlowsFrom_ to prevent leaking of data. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _ProcessManager_ who is responsible for managing process _FlowsFrom_. The Disabled Data Flow control should be deselected only when the flow of data is enabled again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art6-1-a,GDPRArt.6.1a.ProcessingByConsent,"Processing and/or storage of _Data_ by consent of the data subject _DataSubject_, by including a means for them to express consent via their interface to the system, maintaining an access control policy for _Data_ based on their consent decisions, and enforcing the policy using an enforcement point in the data access path at _Service_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art6-1-a-p,GDPRArt.6.1a.ProcessingWithInferredConsent,"Processing of _Data_ by consent of the data subject _DataSubject_, where they have control over the device _SHost_ providing the data, and so can enforce restrictions consistent with their own consent decisions. It is still necessary to have a consent interface, but policy enforcement is up to the data subject.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art6-1-bcef,GDPRArt.6.1bcef.Other,"Processing of _Data_ under GDPR Art 6.1b (performance of a contract), Art 6.1c (to comply with regulation), Art 6.1e (in the public interest) or Art 6.1f (legitimate interests). The Governance control means process _Process_ has analysed by the relevant experts and documented the case for it being considered lawful under one of these provisions. Access to the data must still be logged by its storage device _SHost_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art6-1-d,GDPRArt.6.1d.VitalInterests,Processing of _Data_ under GDPR Art 6.1d (protection of vital interests). The Vital Interests control means process _Process_ has analysed by the relevant experts and documented the case for it being considered necessary to protect the vital interests of the data subject or another natural person. Access to the data must still be logged by its storage device _SHost_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art6-1-d-p,GDPRArt.6.1d.VitalInterests,Processing of _Data_ under GDPR Art 6.1d (protection of vital interests). The Vital Interests control means process _Process_ has analysed by the relevant experts and documented the case for it being considered necessary to protect the vital interests of the data subject or another natural person.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art8-2,GDPRArt.8.2.GuardianApproval,"Processing of personal data by consent is legal if the subject _DataSubject_ is old enough (16+ or a lower limit in some states). The user interface for role _DataSubject_ should include measures to ensure this. Competence Check represents a check whether _DataSubject_ is old enough to provide consent, Guardian Consent signifies that reasonable efforts must be made to get authorisation from their legal guardian where this proves not to be the case.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art9-2-c,GDPRArt.9.2c.ConsentIfAble,"Processing of special category data _Data_ to protect vital interests must have the consent of the data subject _DataSubject_ if they are in a position to make a consent decision. One must check their competence to make such a decision, and provide a consent  interface to support this if they can. The data _Data_ must then be protected by a policy managed according to their consent decision(s) and linked to their data, with an enforcement point at _Service_, the process accessing their data. If the subject cannot provide a consent decision, it is legal to proceed, so there should be a way to bypass the enforcement point only in that case via a break the glass protocol. Finally, access to the data must be logged (including use of this override).",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPR-Art9-2-c-p,GDPRArt.9.2c.ConsentIfAble,"Processing of special category data _Data_ to protect vital interests must have the consent of the data subject _DataSubject_ if they are in a position to make a consent decision. One must check their competence to make such a decision, and provide an interface that explains the purpose of processing. Enforcement can be handled by the _DataSubject_ if they control the storage device, consent being inferred if they allow access.  If they are not able to provide a consent decision, it is legal to take their device and access it outside their control.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPRAtJurisdiction,GDPRAtJurisdiction,The jurisdiction _Jurisdiction_ is subject to the GDPR.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPRAtRemoteJurisdiction,GDPRAtRemoteJurisdiction,The jurisdiction _RemoteJurisdiction_ is subject to the GDPR.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPRDataFlowGovernance,GDPRDataFlowGovernance,The flow of data _Data_ between _FlowsFrom_ and _Process_ has been analysed by legal experts and found to be compliant with the GDPR.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPRPrivacyShieldAtOrganisation,GDPRPrivacyShieldAtOrganisation,"Organisation _Operator_ has Privacy Shield status under the GDPR, i.e. they are committed to respect and uphold the GDPR when handling personal data from EU citizens and residents, even though they are based outside the EU.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#GDPR,domain#CSG-GDPRSuspendDataFlow,GDPRSuspendDataFlow,"The flow of data _Data_ from _FlowsFrom_ to _Process_ can be temporarily disabled by the manager _Human1_ of _FlowsFrom_ to prevent a breach of GDPR regulations by its transmission to _Process_. This strategy represents a contingency plan, which can be used to prevent such a breach, but it may also trigger other threats representing possible side effects.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#GDPR,domain#CSG-GDPRSuspendDataFlow-Implementation-Runtime,GDPRSuspendDataFlow.Implementation,"The flow of data _Data_ from _FlowsFrom_ to _Process_ has been disabled by _Human1_ to prevent a breach of the GDPR. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _Human1_ who is responsible for managing the service _FlowsFrom_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-ImpersonalThing,ImpersonalThing,"Signals that the IoT asset _Thing_ is not related to a human data subject, thus addressing modelling error threats representing the possibility that the relationship to a data subject has been overlooked.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-InferredControlData,InferredControlData,It is acceptable that the control data _Data_ is inferred.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-InferredSensedData,InferredSensedData,It is acceptable that the sensed data _Data_ is inferred.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-NonRealtimeSensor,NonRealtimeSensor,"The IoT device _Sensor_ implements a process for measurement of a physical system where it is not necessary to get real-time updates to control input data, due to the nature of the application. This control strategy does not represent a contingency plan but indicates that the application is not sensitive to interruptions in control inputs.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-SafeIoTControlMode,SafeIoTControlMode,"The IoT controller device _Controller_ can be set to operate within safety limits such that it poses no danger to the physical system it regulates, even without real-time control inputs. This strategy represents a contingency plan, which can be used to reduce risk from some threats. However, it may trigger other threats, or produce some loss of efficiency or function in the physical system.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#IoT,domain#CSG-SafeIoTControlMode-Implementation-Runtime,SafeIoTControlMode.Implementation,"The IoT controller device _Controller_ has been set to operate within safety limits in response to an interruption in real-time control inputs, such that it poses no danger to the physical system it regulates. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing the device. The Safe IoT Controller control shoud be deselected only when the restrictions on _Controller_ have been lifted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-SafeIoTController,SafeIoTController,"The IoT controller device _Controller_ is regulating a physical system where it is not necessary to get real-time updates to control input data, due to the nature of the IoT application. This control strategy does not represent a contingency plan to constrain _Controller_ at run-time, but should be used to signal that the IoT application is not sensitive to temporary interruption in the flow of control inputs.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-SuspendUnreliableController,SuspendUnreliableController,"The IoT controller device _Controller_ can be disabled if it becomes unreliable, to prevent it causing problems in the physical environment where it operates. This strategy represents a contingency plan, which can be used to reduce risk from some threats. However, it will trigger threats representing the resulting loss of availability.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#IoT,domain#CSG-SuspendUnreliableController-Implementation-Runtime,SuspendUnreliableController.Implementation,"The IoT controller device _Controller_ has been disabled when it becomes unreliable, to prevent it causing problems in the physical environment where it operates. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing the device. The Disabled Host control should be deselected only when the host has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#IoT,domain#CSG-SuspendUnreliableController-Trigger,SuspendUnreliableController.Trigger,"This strategy represents a state in which IoT controller device _Controller_ is suspended due to using a contingency plan. It is used as a trigger for threats representing side effects, and should not be used for any other purpose.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#LocalDeviceConnectivity,domain#CSG-DisableMeshRouting,DisableMeshRouting,"Bluetooth mesh routing is disabled in device _Gateway_, preventing it routing between its Bluetooth connections from _FromHost_ to _ToHost_. This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction. The default configuration for most Bluetooth enabled hosts is to have mesh routing disabled, but the model must assume it is enabled unless the control is selected, or potential threats may be overlooked.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#LocalDeviceConnectivity,domain#CSG-DisableTethering,DisableTethering,"Tethering (or reverse tethering) is disabled between device _Host_ and IP subnet _LogicalSubnet_ via the USB/Bluetooth connection with device _Gateway_, so cannot be used by attackers.  This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction. The default configuration for most devices is for tethering disabled, but the model must assume it is enabled unless controls are selected to signify otherwise, or potential threats may be overlooked.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#LocalDeviceConnectivity,domain#CSG-SimpleSecurePairing-Full,SimpleSecurePairing.Full,"Simple Secure Pairing (SSP) is used between _RemoteHost_ and _Host_, following the Numeric Comparison or PassKey association model, in which the connection is confirmed by the user by entering a shared key or confirming successful sharing of such a key by the two devices.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#LocalDeviceConnectivity,domain#CSG-SimpleSecurePairing-Local,SimpleSecurePairing.Local,"Simple Secure Pairing (SSP) is used between _RemoteHost_ and _Host_, following the Just Works association model with user confirmation at _Host_. This is effective in preventing spoofing in insecure locations, but depends on there being one secure location where the numerical comparison can be made safely, and then the result stored for subsequent use.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#LocalDeviceConnectivity,domain#CSG-SimpleSecurePairing-Remote,SimpleSecurePairing.Remote,"Simple Secure Pairing (SSP) is used between _RemoteHost_ and _Host_, following the Just Works association model with user confirmation at _RemoteHost_. This is effective in preventing spoofing in insecure locations, but depends on there being one secure location where the numerical comparison can be made safely, and then the result stored for subsequent use.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-AccountLockingAtHost,AccountLockingAtHost,"The number of login attempts at device _Host_ is limited, and user accounts locked when there are too many unsuccessful login attempts, or too many login attempts within a short period.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-AccountLockingAtService,AccountLockingAtService,"The number of login attempts at service _Service_ is limited, and user accounts locked when there are too many unsuccessful login attempts, or too many login attempts within a short period.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-AutomaticScreenLock,AutomaticScreenLock,"Host device _Host_ is configured with an automated screen lock activated after a suitably short period of inactivity, requiring user _Human_ to re-authenticate before resuming a session.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Network,domain#CSG-BiometricAccessControlAtHost,BiometricAccessControlAtHost,"Access to device _Host_ is controlled, by authenticating authorised users using biometrics.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-BiometricIDCheckedAtHost,BiometricIDCheckedAtHost,"Users in the role _Human_ have a biometric ID such as a fingerprint registered with the system, enabling them to pass a biometric ID check to access host _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-BugFixingAtHost,BugFixingAtHost,"Use a systematic procedure for regular updating of software used (including hosted processes) on device _Host_, and have a contingency plan included in the system operating policies and practices for _HostManager_ to manually apply updates immediately should the need for them become urgent.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-BugFixingAtHost-Implementation,BugFixingAtHost.Implementation,"Represents a situation in which software patches have been applied manually by _HostManager_ to address functional bugs in device _Host_. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Note that this should only be considered if a suitable software patch is available. To implement this at runtime, signal the responsible user _HostManager_. Then deselect the SoftwarePatched control and restore the asserted Intrinsic TWL of _Host_ once the update has been confirmed.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ChipAndPinAccessControlAtHost,ChipAndPinAccessControlAtHost,"Access to device _Host_ is controlled, by authenticating authorised users using a 2-factor system involving possession of a physical key or dongle, such as a chip and PIN card.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ChipAndPinCardAccessToHost,ChipAndPinCardAccessToHost,Users in the role _Human_ are issued with a 2-factor authentication key they can use to verify their identity and access host _Host_.,domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Network,domain#CSG-ClientContinuousAuthentication,ClientContinuousAuthentication,Access to service _Service_ is controlled by authenticating user _Human_ based on their registered usage characteristics captured by the device _CHost_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientContinuousAuthentication-Trigger,ClientContinuousAuthentication,Access to service _Service_ is controlled by authenticating user _Human_ based on their registered usage characteristics captured by the device _CHost_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientOneTimeKeyAccess,ClientOneTimeKeyAccess,"Access to a service _Service_ requires a one time key, generated using a one time key device which itself requires a password entered by the user _Human_, who then types the one time key into their client application _Client_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientOneTimeKeyAuthentication,ClientOneTimeKeyAuthentication,"Access to service _Service_ is controlled, by authenticating authorised users using a one time key created using a client-side authentication device provided to them.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientOutOfBandKeyAccess,ClientOutOfBandKeyAccess,"Access to a service _Service_ requires the user _Human_ to supply a password, and then enter a key which is sent to them via a separate channel into their client application _Client_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientOutOfBandKeyAuthentication,ClientOutOfBandKeyAuthentication,"Access to service _Service_ is controlled, by authenticating authorised users using a password and a separate key sent to them via a separate (out of band) means.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientPasswordAccess,ClientPasswordAccess,"Access to a service _Service_ requires a password, which is stored by the client process _Client_ on its host _CHost_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientPasswordAuthentication,ClientPasswordAuthentication,The service _Service_ controls access by requiring users to authenticate with a password.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientServiceTLS,ClientServiceTLS,"Transport layer security is implemented by both _Client_ and _Service_ for communication between them. This prevents passive snooping in the network, including gateway devices, but it does not prevent service impersonation attacks. That can be prevented by also using service authentication via a trusted key (e.g. X.509 or equivalent).",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientStoredPasswordAccess,ClientStoredPasswordAccess,"Access to a service _Service_ requires a password, which was supplied originally by the user _Human_ and stored by the client _Client_ in a secure password store.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientStoredPasswordAccess-Optional,ClientStoredPasswordAccess,"Access to a service _Service_ requires a password, which was supplied originally by the user _Human_ and stored by the client _Client_ in a secure password store.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientStrongPasswordAuthentication,ClientStrongPasswordAuthentication,"The quality of passwords to authenticate users of service _Service_ is checked whenever the password is set or changed, e.g. using standards like NIST-800-63.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientUserPasswordAccess,ClientUserPasswordAccess,Users in the role _Human_ choose a password which is registered with the system allowing access to _Service_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientUserPasswordAccess-Optional,ClientUserPasswordAccess,Users in the role _Human_ choose a password which is registered with the system allowing access to _Service_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientUserStrongPasswordAccess,ClientUserStrongPasswordAccess,"Access to service _Service_ is controlled, by authenticating authorised users using a strong password, which is supplied each time by the user _Human_. This is a trigger condition for the potential risk that the user may forget the strong password.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ClientX509Authentication,ClientX509Authentication,"Access to service _Service_ is controlled, by authenticating authorised users during the TLS connection against a known public key registered via a trustworthy means such as X509.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ContinuousUserAuthentication,ContinuousUserAuthentication,Access to process _Process_ is controlled by authenticating user _Human_ based on their registered usage characteristics captured by a personal device _Host_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ContinuouslyObservedGateway,ContinuouslyObservedGateway,Physical access to host _Gateway_ is controlled by being situated where it can be under constant surveillance in a location that is continuously occupied at times when attacks may occur.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ContinuouslyObservedHost,ContinuouslyObservedHost,Physical access to host _Host_ is controlled by being situated where it can be under constant surveillance in a location that is continuously occupied at times when attacks may occur.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DeprioritisedProcess-Runtime,DeprioritisedProcess.Runtime,"The process _Process_ is configured to run with low priority, so it cannot overload its host _Host_, although this means if overloaded it will likely become unavailable instead. This can be configured in advance to block the threat, or implemented as a run-time response to an overload by signalling the manager _HostManager_ of the process host _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableGatewayHost-Runtime,DisableGatewayHost.Runtime,"Device _Gateway_ is disabled to prevent it being involved in an attack. This strategy represents a run-time adaptation in response to a threat, which may or may not be following some contingency plan. It also triggers threats representing side effects that would be caused by such an action.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableHost-Runtime,DisableHost,"Device _Host_ is disabled to prevent it being involved in an attack. This strategy represents a run-time adaptation in response to a threat, which may or may not be following some contingency plan. It also triggers threats representing side effects that would be caused by such an action.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableHost-Trigger,DisableHost.Trigger,"This strategy represents a state in which _Host_ has been disabled, used as a trigger for threats representing side effects. It should not be used for any other purpose.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableLocalSubnet,DisableLocalSubnet,"Indicates provision of network _Subnet_ implementing abstract network _LogicalSubnet_ is disabled at device _Gateway_, preventing attackers accessing _LogicalSubnet_ via _Subnet_. This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It normally applies where an abstract subnet like a WiFi hotspot could be provisioned in an unsafe location, but there is a policy to switch it off at the providing host _Gateway_ when visiting that location. It also triggers threats representing side effects that would be caused by such a policy, i.e., that _Subnet_ will not be available in that location.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableProcess-Runtime,DisableProcess,"Process _Process_ is disabled to prevent it being involved in an attack. This strategy represents a run-time adaptation in response to a threat, which may or may not be following some contingency plan. It also triggers threats representing side effects that would be caused by such an action.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableProcess-Trigger,DisableProcess,"Process _Process_ is disabled to prevent it being involved in an attack. This strategy represents a run-time adaptation in response to a threat, which may or may not be following some contingency plan. It also triggers threats representing side effects that would be caused by such an action.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableRadioSubnet,DisableRadioSubnet,"Indicates provision of network _RadioSubnet_ is disabled at device _Gateway_, meaning the subnet is not available to potential attackers. This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction. The most common situation where provision of a subnet is possible but would not be used in practice is where a mobile device provides a WiFi hotspot. The control applies to the hotspot implementation, so affects provision of the hotspot in one location, making it possible to indicate  that the user would keep the hotspot functionality switched off in that location.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-DisableSubnet,DisableSubnet,"Indicates provision of network _LogicalSubnet_ is disabled at device _Gateway_, meaning the subnet is not available to potential attackers. This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction. The most common situation where provision of a subnet is possible but would not be used in practice is where a mobile device provides a WiFi hotspot, which it could do in any location, but the user will keep the hotspot functionality switched off in some locations.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-EmbeddedHostSecurity,EmbeddedHostSecurity,Host _Host_ is locked or built into the physical environment _Space_ such that neither it nor any of its  internal storage media can be removed or altered without destroying them.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-FormalDeviceVerification,FormalDeviceVerification,"The software for device _Host_ has been analysed by independent experts using formal methods and shown to be free of bugs. It is therefore guaranteed to work correctly for arbitrary (even malicious) inputs. However, this is only possible for simple devices. Note that it does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations (although in principle no vulnerabilities should ever be found).",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-FormalProcessVerification,FormalProcessVerification,"The software for process _Process_ has been analysed by independent experts using formal methods and shown to be free of bugs. It is therefore guaranteed to work correctly for arbitrary (even malicious) inputs. However, this is only possible for simple processes. Note that it does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations (although in principle no vulnerabilities should ever be found).",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-HostCertification,HostCertification,"The software and hardware at device _Host_ has been assessed and certified to be secure by independent experts. The device is unlikely to contain exploitable bugs, though the assessment may become outdated so should be renewed from time to time. Note that this does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-HostEncryption,HostEncryption,"Data stored on physical device _PhysicalHost_ are encrypted, so data cannot be accessed by physically extracting and reading storage devices from _PhysicalHost_, as an alternative to logging into the device.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-HostManagerScreening,HostManagerScreening,Persons in the role _HostManager_ responsible for managing _Host_ are screened by their employer _Employer_ before being given that role. This ensures they are more trustworthy than one would expect given the population or community from which they are recruited.,domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Network,domain#CSG-HostWithMultipleWiFiNIC,HostWithMultipleWiFiNIC,Means host _Gateway_ has more than one WiFi LAN network interface.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-HostWithMultipleWiredNIC,HostWithMultipleWiredNIC,Means mobile host _Gateway_ has more than one Wired LAN network interface.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-IgnoreManagementOfHost,IgnoreManagementOfHost,"Signifies that the management of device _Host_ is omitted because it is out of scope, e.g. because its management does not form part of the system. Note that this means modelling error threats to detect unmanaged devices will be ignored, but threats that could be addressed by a system manager will still apply to the unmanaged devices.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-IndependentGatewayHosts,IndependentGatewayHosts,"If the instances of a class of devices _Gateway_ are independent of each other, having admin rights does not allow control of resourcing of _Gateway_ instances.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-IndependentHosts,IndependentHosts,"If the instances of a class of devices _Host_ are independent of each other, having admin rights does not allow control of resourcing of _Host_ instances.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ManagerHostFaultRecovery,ManagerHostFaultRecovery,"The device _Host_ is monitored for reliability or availability, and if problems are found, its manager _HostManager_ can take corrective action while waiting for updated software or hardware. This strategy represents a contingency plan included in the system operating policies and practices, e.g. to roll back software to an older but more reliable version or switch to a stand-in device from a different hardware vendor.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-ManagerHostFaultRecovery-Implementation-Runtime,ManagerHostFaultRecovery.Implementation,"The device _Host_ was found to have reliability or availability issues, and action has been taken by its manager _HostManager_ to correct the problem. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To implement the plan at runtime, signal _HostManager_ that the problem was detected with _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ManagerProcessFaultRecovery,ManagerProcessFaultRecovery,"The process _Process_ is monitored for reliability and availability, and if problems are found, the manager _HostManager_ of its host device _Host_ can take corrective action while waiting for updated software. This strategy represents a contingency plan included in the operating policies and practices if certain threats should arise, e.g. to roll back software to an older but more reliable version.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-ManagerProcessFaultRecovery-Implementation-Runtime,ManagerProcessFaultRecovery.Implementation,"The process _Process_  was found to have reliability or availability issues, and action has been taken by the manager _HostManager_ of its host device to correct the problem. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To implement the plan at runtime, signal _HostManager_ that the problem was detected with _Process_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkAuthN-PSK,NetworkAuthN.PSK,"To prevent network spoofing, a gateway _Gateway_ providing the network and the supplicant device _Host_ can use a pre-shared key that can be verified by _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkAuthN-PSK-Optional,NetworkAuthN.PSK,"To prevent network spoofing, a gateway _Gateway_ providing the network and the supplicant device _Host_ can use a pre-shared key that can be verified by _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkAuthN-X509,NetworkAuthN.X509,"To prevent network spoofing, a gateway _Gateway_ providing the network can use an X509 (or otherwise trusted) key pair, verified by the supplicant device _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkAuthN-X509-Optional,NetworkAuthN.X509,"To prevent network spoofing, a gateway _Gateway_ providing the network can use an X509 (or otherwise trusted) key pair, verified by the supplicant device _Host_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkEAP-AAA,NetworkEAP.AAA,Control access to subnet _LogicalSubnet_ using a (usually remote) AAA service that verifies keys provisioned in SIM cards to authorised supplicants. You should also specify SIM cards be used by supplicant devices or they will be unable to connect.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkEAP-PSK,NetworkEAP.PSK,"Control access to subnet _LogicalSubnet_ using a pre-shared key. This is installed at the device _Gateway_ providing the network, which also verifies that supplicants have the same key, preventing unauthorised access. You should also specify shared keys for supplicant devices or they will be unable to connect.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkEAP-PSK-Client,NetworkEAP.PSK.Client,"If subnet _LogicalSubnet_ uses a pre-shared key to control access, supplicant device _Host_ can connect if it has the pre-shared key.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkEAP-TLS,NetworkEAP.TLS,"Control access to subnet _LogicalSubnet_ using authentication via X509 or otherwise trusted public-private key pairs. The gateway device _Gateway_ providing the network has an (X509 certified) key, and a means to verify (X509 certified) keys registered by authorised supplicants. You should also specify that supplicant devices have (X509 certified) key pairs or they will be unable to connect.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-NetworkEAP-TLS-Client,NetworkEAP.TLS.Client,"If subnet _LogicalSubnet_ uses a EAP.TLS to control access, supplicant device _Host_ can connect if it has an X509 certified (or similarly trusted) asymmetric key pair.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PasswordChecksAtHost,PasswordChecksAtHost,"Access to device _Host_ is controlled, by authenticating authorised users using a password.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PasswordSelfServiceReset,PasswordSelfServiceReset,"If user _Human_ forgets their (strong) password, service _Service_ provides a way for them to reset it using an out of band communication (e.g. email or sms).",domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Network,domain#CSG-PatchingAtHost,PatchingAtHost,"Use a systematic procedure for regular security patching of software used (including hosted processes) on device _Host_, and have a contingency plan included in the system operating policies and practices for _HostManager_ to manually apply patches immediately should the need for them become urgent.",domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Network,domain#CSG-PatchingAtHost-Implementation,PatchingAtHost.Implementation,"Represents a situation in which software patches have been applied manually by _HostManager_ to eliminate vulnerabilities in device _Host_. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Note that this should only be considered if a suitable software patch is available. To implement this at runtime, signal the responsible user _HostManager_. Then deselect the SoftwarePatched control and restore the asserted Extrinsic TW levels of _Host_ once the update has been confirmed.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PatchingAtProcess,PatchingAtProcess,"Use a systematic procedure for regular security patching of software used (including hosted process _Process_) on device _Host_, and have a contingency plan included in the system operating policies and practices for _HostManager_ to manually apply patches immediately for _Process_ should the need for them become urgent.",domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Network,domain#CSG-PatchingAtProcess-Implementation,PatchingAtProcess.Implementation,"Represents a situation in which software patches have been applied manually by _HostManager_ to eliminate vulnerabilities in process _Process_. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Note that this should only be considered if a suitable software patch is available. To implement this at runtime, signal the responsible user _HostManager_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PatchingAtService,PatchingAtService,"Use a systematic procedure for regular security patching of software used (including hosted process _Service_) on device _SHost_, and have a contingency plan included in the system operating policies and practices for _HostManager_ to manually apply patches immediately for _Service_ should the need for them become urgent.",domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Network,domain#CSG-PatchingAtService-Implementation,PatchingAtService.Implementation,"Represents a situation in which software patches have been applied manually by _HostManager_ to eliminate vulnerabilities in process _Service_. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. Note that this should only be considered if a suitable software patch is available. To implement this at runtime, signal the responsible user _HostManager_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PenTestingOfHost,PenTestingOfHost,"The software and hardware at device _Host_ has been tested and certified to be secure by independent experts. The device is unlikely to contain exploitable bugs, though the assessment may become outdated so should be renewed from time to time. Note that this does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-PenTestingOfProcess,PenTestingOfProcess,"The software for process _Process_ has been tested and certified to be secure by independent experts. The process is unlikely to contain exploitable bugs, though the assessment may become outdated so should be renewed from time to time. Note that this does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-PersonalDeviceOversight,PersonalDeviceOversight,"Device _Host_ is a personal device dedicated to one user, who will protect it from some types of attacks involving ongoing physical access or evident alteration of the device. For these threats, the protection level is very good because a momentary lapse in attention from the user is not sufficient to allow the attack.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PersonalDeviceProtection,PersonalDeviceProtection,"Device _Host_ is a personal device dedicated to one user, who will protect it from some types of attacks involving physical access. This particular strategy relates to threats that are blocked, affording slightly less than perfect protection because the user may be overcome by force or become temporarily less than vigilant.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Network,domain#CSG-PersonalDeviceSecurity,PersonalDeviceSecurity,"Device _Host_ is a personal device dedicated to one user, who has been trained in basic security and will protect it from some types of attacks involving physical access. Similar to personal device protection, but more effective due to the user being able to maintain vigilance and avoid physically uncontrollable situations.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PhysicalChecksOnGateway,PhysicalChecksOnGateway,"Device _Gateway_ is physically monitored to rapidly detect if it has been physically removed, altered or substituted, so its manager _HostManager_ can address any physical compromise. This strategy represents a contingency plan included in the system operating policies and practices, e.g. to repair or replace the affected device. Activation of the plan restores normal service, but if the device was stolen the attacker still has possession of the original which could still be misused.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-PhysicalChecksOnGateway-Implementation-Runtime,PhysicalChecksOnGateway.Implementation,"Device _Gateway_ having found to be physically removed, altered or substituted, action has been taken by its manager _HostManager_ to restore normal service. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To implement the plan at runtime, signal _HostManager_ that the problem was detected with _Gateway_ which may need repair or replacement.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-PhysicalChecksOnHost,PhysicalChecksOnHost,"Device _Host_ is physically monitored to rapidly detect if it has been physically removed, altered or substituted, so its manager _HostManager_ can address any physical compromise. This strategy represents a contingency plan included in the system operating policies and practices, e.g. to repair or replace the affected device. Activation of the plan restores normal service, but if the device was stolen the attacker still has possession of the original which could still be misused.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-PhysicalChecksOnHost-Implementation-Runtime,PhysicalChecksOnHost.Implementation,"Device _Host_ having found to be physically removed, altered or substituted, action has been taken by its manager _HostManager_ to restore normal service. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To implement the plan at runtime, signal _HostManager_ that the problem was detected with _Host_ which may need repair or replacement.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ProcessCertification,ProcessCertification,"The software for process _Process_ has been assessed and certified to be secure by independent experts. The process is unlikely to contain exploitable bugs, though the assessment may become outdated so should be renewed from time to time. Note that this does not prevent bugs that are present being discovered and exploited by attackers, so it is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-RadioSubnetEncryption,RadioSubnetEncryption,"To prevent passive snooping in radio network _LogicalSubnet_, one can configure the network to use encrypted radio communication in _LogicalSubnet_.",domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Network,domain#CSG-RemoteMobileWiping,RemoteMobileWiping,"Device _Host_ can be remotely wiped by its user _Human_ if the device is lost or stolen, permanently removing accounts, security keys and data. This strategy represents a contingency plan",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-RemoteMobileWiping-Implementation-Runtime,RemoteMobileWiping.Implementation,"Device _Host_ has been remotely wiped by its user after being stolen. To implement this at runtime, signal the device user _Human_ that the action should be taken. The control strategy is used to model the effect this should have so it can be considered as an option in current (runtime) decision support calculations. To activate it at runtime, signal user _Human_ who is responsible for the device. Then deselect the ManualActionTaken control and restore the asserted Possession TWL of _Host_ once the action has been confirmed.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-RestrictedRemoteAccess,RestrictedRemoteAccess,"Remote access service _Service_ runs a restricted shell on _SHost_, such that remote users cannot gain full access to the host, and can only run specific application processes on _SHost_ (those controlled by _Service_).",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SecureBIOSatHost,SecureBIOSatHost,Device _Host_ is configured to prevent alteration of its software by physical insertion during its boot sequence.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SecureHostConfig,SecureHostConfig,"Device _Host_ is configured securely: passwords or other authentication are set up including resetting default passwords for all user and administrator accounts, auto-run features disabled to prevent execution without user authorisation for files from removable storage or from the internet, and unnecessary software and especially network accessible services removed or disabled.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SecureProcessExecution,SecureProcessExecution,Uses hardware security on device _Host_ to bootstrap a protected enclave in which _Process_ can execute without interference even by someone with admin rights at _Host_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-ServiceAuthN-X509,ServiceAuthN.X509,The client _Client_ authenticates the service _Service_ using an asymmetric cryptographic challenge against a public key registered to the service operator through a trusted means such as X509.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SoftwareTestingOfHost,SoftwareTestingOfHost,"The hardware and software for device _Host_ has been independently tested and verified to meet functional requirements. The device is therefore unlikely to contain bugs that cause a malfunction. This does not prevent bugs that are present from causing problems, so this is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SoftwareTestingOfProcess,SoftwareTestingOfProcess,"The software for process _Process_ has been independently tested and verified to meet functional requirements. The process is therefore unlikely to contain bugs that cause a malfunction. This does not prevent bugs that are present from causing problems, so this is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SoftwareUpdatingAtHost,SoftwareUpdatingAtHost,Use a systematic procedure for updating software used (including hosted processes) on device _Host_.,domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Network,domain#CSG-SuspendServiceVulnerableToXSS,SuspendServiceVulnerableToXSS,"Service _Service_ may be temporarily disabled by the manager of its host _HostManager_ to prevent a known vulnerability being exploited in a cross-site scripting attack. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SuspendServiceVulnerableToXSS-Implementation-Runtime,SuspendServiceVulnerableToXSS.Implementation,"Process _Service_ has been disabled by the manager of its host _HostManager_ to prevent it being exploited in a cross-site scripting attack. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing device _SHost_ where _Service_ is running. The Disabled Process control should be deselected only when the process has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendServiceVulnerableToXSS-Trigger,SuspendServiceVulnerableToXSS,"Service _Service_ may be temporarily disabled by the manager of its host _HostManager_ to prevent a known vulnerability being exploited in a cross-site scripting attack. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendVulnerableHost,SuspendVulnerableHost,"Device _Host_ may be temporarily disabled by its manager _HostManager_ to prevent vulnerabilities being exploited by potential attackers. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SuspendVulnerableHost-Implementation-Runtime,SuspendVulnerableHost.Implementation,"Device _Host_ has been disabled by its manager _HostManager_ to prevent a known vulnerability being exploited by an attacker. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing the device. The Disabled Host control should be deselected only when the host has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendVulnerableHost-Trigger,SuspendVulnerableHost,"Device _Host_ may be temporarily disabled by its manager _HostManager_ to prevent vulnerabilities being exploited by potential attackers. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendVulnerableProcess,SuspendVulnerableProcess,"Process _Process_ may be temporarily disabled by the manager of its host _HostManager_ to prevent vulnerabilities being exploited by potential attackers. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SuspendVulnerableProcess-Implementation-Runtime,SuspendVulnerableProcess.Implementation,"Process _Process_ has been disabled by the manager of its host _HostManager_ to prevent a known vulnerability being exploited by an attacker. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing device _Host_ where _Process_ is running. The Disabled Process control should be deselected only when the process has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendVulnerableProcess-Trigger,SuspendVulnerableProcess,"Process _Process_ may be temporarily disabled by the manager of its host _HostManager_ to prevent vulnerabilities being exploited by potential attackers. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-SuspendVulnerableService,SuspendVulnerableService,"Service _Service_ may be temporarily disabled by the manager of its host _HostManager_ to prevent vulnerabilities being exploited by potential attackers. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it may triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Network,domain#CSG-SuspendVulnerableService-Implementation-Runtime,SuspendVulnerableService.Implementation.Runtime,"Service _Service_ has been disabled by the manager of its host _HostManager_ to prevent a known vulnerability being exploited by an attacker. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal user _HostManager_ who is responsible for managing device _Host_ where _Service_ is running. The Disabled Process control should be deselected only when the process has been restarted.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-UserBasicSecurityTraining,UserBasicSecurityTraining,Users in the role _Human_ are trained to avoid basic cyber security errors associated with the use of passwords.,domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Network,domain#CSG-UserPasswordAccessToHost,UserPasswordAccessToHost,Users in the role _Human_ choose a password which is registered with the system allowing access to interactive host _Host_ that authenticates using the password.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-UserSecurityTraining,UserSecurityTraining,"Users in the role _Human_ are trained to avoid most common cyber security errors by using only strong passwords, recognising malicious emails, and the importance of physical security including the use of screen locking for fixed devices that cannot be carried on the person.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Network,domain#CSG-X509CertificationOfClient,X509CertificationOfClient,"Access to a service requires authentication using an asymmetric cryptographic challenge during a TLS connection establishment by _Client_, based on an X509 or other trusted public key belonging to the authorised user.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-X509CertificationOfHost,X509CertificationOfHost,"Access to a service requires authentication using an asymmetric cryptographic challenge during a TLS connection establishment by _Client_, based on an X509 or other trusted public key belonging to the authorised user. Here the client _Client_ is acting as a proxy for its host device, so the key is actually installed on _CHost_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Network,domain#CSG-XSSPreventionAtService,XSSPreventionAtService,The XSS Sanitisation control means the service _Service_ has been implemented using an XSS-safe language and framework including XSS detection code scanners.,domain#TrustworthinessLevelSafe,FALSE,TRUE
package#NetworkConnectivity,domain#CSG-BWManagementAtInterface,BWManagementAtInterface,Limit the bandwidth for each remote source of communication destined for the network address of _Host_ on _LogicalSubnet_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#NetworkConnectivity,domain#CSG-BlockGatewayRoute,BlockGatewayRoute,"Apply a default firewall rule at gateway host _Gateway_ to drop messages sent via the gateway from _FromSubnet_ to _ToSubnet_, unless they are service requests or responses.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#NetworkConnectivity,domain#CSG-BlockInterface,BlockInterface,"Apply a default firewall rule at host _Host_ to drop messages sent to the host from subnet _LogicalSubnet_, unless they are service requests or responses.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#NetworkConnectivity,domain#CSG-DisableNetworkConnection,DisableNetworkConnection,"Signifies that device _Host_ will not connect to subnet _LogicalSubnet_ even though such a connection is implied by the system model. This strategy does not represent a contingency plan, but a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction.  The most common situation where a connection is possible but is not used is where a mobile device connects to a cellular network which could be done in any location, but the user will avoid it in some locations.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#NetworkConnectivity,domain#CSG-DisablePortForwarding-Runtime,DisablePortForwarding,"If device _Gateway_ blocks unsolicited connections into private subnet _ToSubnet_, port forwarding is used to allow access to services by legitimate clients. This strategy may represent a run-time  adaptation in response to a threat, or a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#NetworkConnectivity,domain#CSG-FilterDosAtInterface,FilterDosAtInterface,"Filter DDoS messages to a target in the core network. This normally has to be arranged through the Internet connection service provider, so it is modelled by assigning the corresponding control to the final interface to the Internet.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-BiometricAccessControlAtSpace,BiometricAccessControlAtSpace,"Access to physical space _Space_ is controlled, and authorised users verified using biometrics registered by a trusted authority.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-ChipAndPinAccessControlAtSpace,ChipAndPinAccessControlAtSpace,"Access to physical space _Space_ is controlled, and authorised users verified using a chip and pin (2 factor) key card issued by a trusted authority.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-ContinuouslyOccupiedSpace,ContinuouslyOccupiedSpace,"Access to physical space _Space_ is controlled by means of physical locks to which only authorised users have a key, and is also continuously occupied at times when physical intrusion is feasible (e.g. at night).",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-IgnorePhysicalIntrusionInSpace,IgnorePhysicalIntrusionInSpace,"Indicates that private space _Space_ is secured physically by measures not included in the system model. The threat of intrusion into _Space_ by malicious outsiders into _Space_ will be ignored, though insider attacks by those authorised to be in _Space_ will not. Note that this represents an expectation, and so is a prior mitigation only which is ignored in current (run-time) risk calculations.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#Physical,domain#CSG-IgnorePhysicalThreatsFromWorld,IgnorePhysicalThreatsFromWorld,"Indicates that threats from as well as to the space _Space_ can be ignored, i.e. that the risk model intentionally does not consider physical attacks from _Space_. This is only permitted if _Space_ is the inferred global public space (the World) used when no locations are asserted in the model. This control strategy is a way to specify that physical security is out of scope for devices with no explicitly specified location(s), i.e. that they are considered physically secure.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-IncludePhysicalThreatsFromWorld,IncludePhysicalThreatsFromWorld,"Indicates that threats to _Host_ from space _Space_ should be considered, even though _Host_ has no explicit location and is inferred to be in the global public space (the World). This control strategy is a way to specify that despite _Host_ having no explicitly defined location, physical security is in scope, and the device is considered to be physically insecure. It addresses modelling error threats but not security threats to _Host_ from _Space_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-InconsistentPhysicalControlsAtWorld,InconsistentPhysicalControlsAtWorld,Inconsistent controls to resolve treatment of hosts with no explicit location. Used only as a trigger for modelling error threats.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Physical,domain#CSG-PhysicalIDChecksAtSpace,PhysicalIDChecksAtSpace,"Access to physical space _Space_ is controlled, and authorised users verified using physical ID such as a passport or ID card issued by a trusted authority.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Physical,domain#CSG-PhysicalLocksAtSpace,PhysicalLocksAtSpace,"Access to physical space _Space_ is controlled by means of physical locks, to which authorised users have a key.",domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Physical,domain#CSG-PhysicalPatrolsInSpace,PhysicalPatrolsInSpace,"The physical space _Space_ is patrolled at frequent intervals to ensure it is free of intruders. Note this does not prevent intrusion, e.g. to steal a device, but it does prevent some types of attacks where the intruder would need uninterrupted access, e.g. use of a device in the space for a significant period.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Privacy,domain#CSG-ImpersonalData,ImpersonalData,"Signals that the data asset _Data_ is not related to a human data subject, thus addressing modelling error threats representing the possibility that the relationship to a data subject has been overlooked.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-ApplicationFirewall,ApplicationFirewall,An application firewall is used at _Proxy_ to protect _Process_ from remote vulnerability exploits.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-ClientAddressWhitelisting,ClientAddressWhitelisting,"The service _Service_ has a whitelist of network addresses from which it accepts client requests, and all the network interfaces from which requests may come have addresses that are fixed or in a restricted range not available to attackers.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-DisableServiceAccess-Runtime,DisableServiceAccess,"Apply a default firewall rule at host _Host_ to drop messages sent to services running on the host from subnet _LogicalSubnet_. This strategy may represent a run-time  adaptation in response to a threat, or a permanent restriction introduced by design or in accordance with an operational policy or user preference. It also triggers threats representing side effects that would be caused by such a restriction, which affect access to services running on _Host_ but not other uses of its connection to _LogicalSubnet_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-DisableServiceChannel,DisableServiceChannel,"Firewall rules that normally allow access to service _Service_ by clients on otherwise blocked network paths are switched off. This strategy represents a permanent restriction introduced by design or in accordance with an operational policy or user preference to avoid accessing _Service_ over certain networks. It may also arise as a side effect of a run-time response to a more specific threat. In either case, it triggers threats representing side effects that would be caused by such a restriction where they affect all available network paths used by a client.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-DisableServiceChannel-Runtime,DisableServiceChannel,"Firewall rules that normally allow access to service _Service_ by clients on otherwise blocked network paths are switched off to prevent an attack. This strategy may represent a run-time adaptation in response to a threat, or a permanent restriction introduced by design or in accordance with an operational policy or user preference to avoid accessing _Service_ over certain networks. It also triggers threats representing side effects that would be caused by such a restriction where they affect all available network paths used by a client.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-SuspendInsecureServiceChannel,SuspendInsecureServiceChannel,"Firewall rules that normally allow access from client _Client_ to service _Service_ may be temporarily switched off by manager _HostManager_ of the service host _SHost_ if the network path is subject to snooping. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#ProcessComms,domain#CSG-SuspendInsecureServiceChannel-Implementation-Runtime,SuspendInsecureServiceChannel.Implementation,"Firewall rules that normally allow access from client _Client_ to service _Service_ have been switched off by manager _HostManager_ of the service host _SHost_ to prevent snooping. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, user _HostManager_ who is responsible for managing _SHost_ should arrange for firewall policies to be switched off. The Disable Service Channel control should be deselected only when access is enabled again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-SuspendInsecureServiceChannel-Trigger,SuspendInsecureServiceChannel,"Firewall rules that normally allow access from client _Client_ to service _Service_ may be temporarily switched off by manager _HostManager_ of the service host _SHost_ if the network path is subject to snooping. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-SuspendVulnerableServiceChannel,SuspendVulnerableServiceChannel,"Firewall rules that normally allow access to service _Service_ on specific network path(s) may be temporarily switched off by its host manager _HostManager_. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#ProcessComms,domain#CSG-SuspendVulnerableServiceChannel-Implementation-Runtime,SuspendVulnerableServiceChannel.Implementation,"Firewall rules that normally allow access to service _Service_ on specific network path(s) have been switched off by its host manager _HostManager_. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, user _HostManager_ who is responsible for managing host _SHost_ should arrange for firewall policies to be switched off, ideally as close as possible to subnet _LogicalSubnet_ from where the risk arises.The Disable Service Channel control should be deselected only when access is enabled again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessComms,domain#CSG-SuspendVulnerableServiceChannel-Trigger,SuspendVulnerableServiceChannel,"Firewall rules that normally allow access to service _Service_ on specific network path(s) may be temporarily switched off by its host manager _HostManager_. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessTrust,domain#CSG-DisableClientAccess,DisableClientAccess,"Access to service _Service_ by client _Client_ is disabled. This control strategy represents a permanent restriction introduced by design, or a temporary situation created following activation of a contingency plan. In the latter case, this control strategy should not itself be selected, because its controls will be fulfilled by the contingency plan activation strategy.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessTrust,domain#CSG-IgnoreConfusedDeputyAttack,IgnoreConfusedDeputyAttack,Signifies that _Service_ can be considered immune to a confused deputy attack that does not involve exploitation of a software vulnerability. This should be used when _Service_ is programmed in such a way that it can only access a back-end service for specific clients. Do not use this if access to back-end services require OIDC- or OAuth-style tokens issued to the client - in that case add the OIDC/OAuth service along with the appropriate relationships from the client and to the back-end service(s).,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessTrust,domain#CSG-SuspendExcessiveClientAccess,SuspendExcessiveClientAccess,"Change from: Access to service _Service_ by client _Client_ may be temporarily disabled by the process manager _ServiceManager_  to prevent the service forwarding excessive requests or becoming overloaded itself, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats. However, it also triggers other threats representing side effects of the policy change, based on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#ProcessTrust,domain#CSG-SuspendExcessiveClientAccess-Implementation-Runtime,SuspendExcessiveClientAccess.Implementation,"Access to service _Service_ by client _Client_ is disabled by the process manager _ServiceManager_  to prevent the service forwarding excessive requests or becoming overloaded itself. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal the process manager _ServiceManager_. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessTrust,domain#CSG-SuspendUnauthenticClientAccess,SuspendUnauthenticClientAccess,"Access to service _Service_ by client _Client_ may be temporarily disabled by its manager _ServiceManager_ to prevent authenticated attacks by impersonated clients, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats but it also triggers other threats representing possible side effects, depending on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#ProcessTrust,domain#CSG-SuspendUnauthenticClientAccess-Implementation-Runtime,SuspendUnauthenticClientAccess.Implementation,"Access to service _Service_ by client _Client_ is disabled by the process manager _ServiceManager_ to prevent authenticated attacks by impersonated clients. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal the process manager _ServiceManager_. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#ProcessTrust,domain#CSG-SuspendUntrustworthyClientAccess,SuspendUntrustworthyClientAccess,"Access to service _Service_ by client _Client_ may be temporarily disabled by the process manager _ServiceManager_ to prevent authenticated attacks by compromised or impersonated clients, at the cost of some reduction in availability. This strategy represents a contingency plan, which can be used to reduce risk from some threats. However, it also triggers other threats representing side effects of the policy change, based on how likely it is that the contingency plan will need to be activated.",domain#TrustworthinessLevelSafe,FALSE,TRUE
package#ProcessTrust,domain#CSG-SuspendUntrustworthyClientAccess-Implementation-Runtime,SuspendUntrustworthyClientAccess.Implementation,"Access to service _Service_ by client _Client_ is disabled by the process manager _ServiceManager_ to prevent authenticated attacks by compromised clients. This strategy represents activation of a contingency plan at runtime, and can be selected to discover what effect this would have on risk levels, allowing this to be used for decision support calculations. To activate it at runtime, signal the process manager _ServiceManager_. The Disable Client Access control should be deselected if and when access by _Client_ to _Service_ has been enabled once again.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Users,domain#CSG-BiometricIDCheckedAtSpace,BiometricIDCheckedAtSpace,"Users in the role _Human_ have a biometric ID such as a fingerprint registered with the system, enabling them to pass a biometric ID check to access space _Space_.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Users,domain#CSG-ChipAndPinCardAccessToSpace,ChipAndPinCardAccessToSpace,Users in the role _Human_ are issued with a 2-factor authentication key they can use to verify their identity and access space _Space_.,domain#TrustworthinessLevelVeryHigh,TRUE,TRUE
package#Users,domain#CSG-PhysicalIDCheckedAtSpace,PhysicalIDCheckedAtSpace,"Users in the role _Human_ have physical ID such as an ID card or passport, registered with the system.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Users,domain#CSG-PhysicalKeyToSpace,PhysicalKeyToSpace,Users in the role _Human_ are issued with a physical key enabling them to access space _Space_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Users,domain#CSG-StaffCover,StaffCover,The employer _Employer_ has multiple employees able to fulfil the role _Human_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Users,domain#CSG-StaffScreening,StaffScreening,Persons fulfilling the role _Human_ are screened by their employer _Employer_ before being given that role. This ensures they are more trustworthy than one would expect given the population or community they come from.,domain#TrustworthinessLevelHigh,FALSE,TRUE
package#Virtualisation,domain#CSG-AutoProvisioningProcessError,AutoProvisioningProcessError,Automated provisioning is specified at process _Process_ but this is an inappropriate control selection because user _Human_ is using the process interactively.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Virtualisation,domain#CSG-AutomatedHostFaultRecovery,AutomatedHostFaultRecovery,"Faulty instances of the virtual device _Host_ can be detected by monitoring, halted, and a replacement provisioned automatically.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Virtualisation,domain#CSG-AutomatedProcessFaultRecovery,AutomatedProcessFaultRecovery,"Faulty instances of the process _Process_ can be detected by monitoring, halted, and a replacement provisioned automatically.",domain#TrustworthinessLevelHigh,TRUE,TRUE
package#Virtualisation,domain#CSG-ElasticHosting,ElasticHosting,"The (virtual) device _Host_ is operating as a cluster, which allows automatic scaling in the number of instances to meet the load placed upon the host. This must be configured in advance, so it is a blocking strategy not a contingency plan or run-time threat response.",domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Virtualisation,domain#CSG-SLAEnforcement,SLAEnforcement,The use of resources by host _Host_ are limited to the level specified in a service level agreement with the hosting data centre _DataCentre_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Virtualisation,domain#CSG-SLAEnforcement-Trigger,SLAEnforcement,The use of resources by host _Host_ are limited to the level specified in a service level agreement with the hosting data centre _DataCentre_.,domain#TrustworthinessLevelSafe,TRUE,TRUE
package#Virtualisation,domain#CSG-VirtualSubnetEncryption,VirtualSubnetEncryption,The virtual subnet _VirtualSubnet_ uses encryption to prevent anyone reading communications via access at the physical layer.,domain#TrustworthinessLevelSafe,TRUE,TRUE
